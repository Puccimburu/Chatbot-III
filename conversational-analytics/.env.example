# Conversational Analytics API - Environment Configuration
# Copy this file to .env and update with your actual values

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# Environment (development, staging, production)
ENVIRONMENT=development

# Debug mode (true/false)
DEBUG=true

# Server configuration
HOST=0.0.0.0
PORT=8000

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# MongoDB Connection
# Format: mongodb://username:password@host:port/database
# For MongoDB Atlas: mongodb+srv://username:password@cluster.mongodb.net/database
MONGODB_URL=mongodb://localhost:27017/conversational_analytics

# Database settings
DATABASE_TIMEOUT_SECONDS=30
MAX_CONNECTIONS_COUNT=10
MIN_CONNECTIONS_COUNT=1

# =============================================================================
# AI/GEMINI CONFIGURATION
# =============================================================================

# Google API Key for Gemini
# Get from: https://makersuite.google.com/app/apikey
GOOGLE_API_KEY=your_google_api_key_here

# Gemini Model Configuration
GEMINI_MODEL_NAME=gemini-1.5-flash
AI_REQUEST_TIMEOUT_SECONDS=30
AI_MAX_RETRIES=3

# =============================================================================
# CACHING CONFIGURATION
# =============================================================================

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Cache TTL settings (in seconds)
SCHEMA_CACHE_TTL=21600      # 6 hours
QUERY_CACHE_TTL=600         # 10 minutes
CHART_CACHE_TTL=3600        # 1 hour

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Auto-detect schema on startup
AUTO_DETECT_SCHEMA_ON_STARTUP=true

# Warm up cache on startup
WARMUP_CACHE_ON_STARTUP=false

# Enable rate limiting
ENABLE_RATE_LIMITING=true

# Enable query caching
ENABLE_QUERY_CACHING=true

# Enable AI-powered features
ENABLE_AI_FEATURES=true

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# API Security
# SECRET_KEY=your-secret-key-here-change-in-production
# API_KEY_HEADER=X-API-Key

# CORS Origins (comma-separated)
# Leave empty for development (allows all localhost)
ALLOWED_ORIGINS=

# Rate Limiting (requests per minute)
RATE_LIMIT_DEFAULT=100
RATE_LIMIT_ANALYTICS=20
RATE_LIMIT_HEALTH=200

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log to file
LOG_TO_FILE=true
LOG_FILE_PATH=logs/conversational_analytics.log

# Log rotation
LOG_MAX_SIZE=10MB
LOG_BACKUP_COUNT=5

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================

# Schema Detection
SCHEMA_SAMPLE_SIZE=1000
SCHEMA_MAX_COLLECTIONS=50

# Query Processing
MAX_QUERY_RESULTS=1000
QUERY_TIMEOUT_SECONDS=30

# Chart Generation
MAX_CHART_DATA_POINTS=100
CHART_GENERATION_TIMEOUT=10

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Development-specific settings (ignored in production)
DEV_ENABLE_DOCS=true
DEV_ENABLE_DEBUG_ENDPOINTS=true
DEV_MOCK_AI_RESPONSES=false

# =============================================================================
# PRODUCTION SETTINGS
# =============================================================================

# Production-specific settings (only used when ENVIRONMENT=production)
PROD_DISABLE_DOCS=true
PROD_ENABLE_METRICS=true
PROD_STRICT_CORS=true

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=5

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Enable metrics collection
ENABLE_METRICS=false

# Prometheus metrics endpoint
METRICS_ENDPOINT=/metrics

# Sentry for error tracking (optional)
# SENTRY_DSN=your_sentry_dsn_here

# Application Performance Monitoring
# APM_SERVICE_NAME=conversational-analytics
# APM_ENVIRONMENT=development

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Optional: Additional AI Services
# OPENAI_API_KEY=your_openai_key_here
# ANTHROPIC_API_KEY=your_anthropic_key_here

# Optional: Cloud Storage
# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key
# AWS_REGION=us-east-1
# S3_BUCKET_NAME=your_bucket_name

# Optional: Google Cloud
# GOOGLE_CLOUD_PROJECT=your_project_id
# GOOGLE_APPLICATION_CREDENTIALS=path/to/service-account-key.json

# =============================================================================
# BACKUP & RECOVERY
# =============================================================================

# Database Backup Configuration
# BACKUP_ENABLED=false
# BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
# BACKUP_RETENTION_DAYS=30

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Example for local development:
# ENVIRONMENT=development
# DEBUG=true
# MONGODB_URL=mongodb://localhost:27017/analytics_dev
# GOOGLE_API_KEY=AIzaSyA...your_key_here
# REDIS_HOST=localhost

# Example for production:
# ENVIRONMENT=production
# DEBUG=false
# MONGODB_URL=mongodb+srv://user:pass@cluster.mongodb.net/analytics_prod
# GOOGLE_API_KEY=AIzaSyA...your_production_key
# REDIS_HOST=your-redis-server.com
# REDIS_PASSWORD=your_redis_password
# LOG_LEVEL=WARNING

# Example for Docker:
# MONGODB_URL=mongodb://mongo:27017/analytics
# REDIS_HOST=redis
# HOST=0.0.0.0

# =============================================================================
# IMPORTANT NOTES
# =============================================================================

# 1. Never commit the actual .env file to version control
# 2. Keep production secrets secure and rotate them regularly
# 3. Use strong, unique passwords for all services
# 4. Consider using environment-specific .env files (.env.development, .env.production)
# 5. Validate all configuration values on application startup
# 6. Monitor configuration changes in production

# =============================================================================
# GETTING STARTED
# =============================================================================

# 1. Copy this file to .env:
#    cp .env.example .env
#
# 2. Update the values above with your actual configuration
#
# 3. At minimum, you need to set:
#    - MONGODB_URL (your MongoDB connection string)
#    - GOOGLE_API_KEY (for AI features)
#
# 4. Optional but recommended:
#    - REDIS_HOST (for caching)
#    - SECRET_KEY (for security)
#
# 5. Start the application:
#    python app.py
#    or
#    uvicorn app:app --reload